  // Made By Baigel (https://github.com/Baigel)

Still Need to Fix:
	 - Please find a better way to disable numlock (see macros section)

Manjaro KDE Plasma 5 Customization Document:

Things done after installation:
	 - Connect to internet
	 - Changed in Settings:
		 - Configure to 'icon view'
		 - Theme changed to Breeze Dark, and mouse theme changed to Breeze Light
		 - Virtual Desktops Made (Under Desktop Behavior) (My Stuff, Ahmed's Stuff), and switching animation changes to 'Desktop Cube Animation'
		 - Under Shortcuts in Virtual Desktops Tab, 'Switch One Desktop to the Left' changed to 'Num+Enter' and Right was changed to 'Num++' (or 'ctr+win+L/R' if no numpad)
			 - (might be under Activities Tab - 'create activity') (can also be under global shortcuts, under shortcuts, look for 'kwin')
		 - Under 'Configure Screen Locking' change the keyboard shortcut to 'Meta+L' (Meta is the windows key)
		 - Under 'Screen Locking' change 'Lock screen automatically after' to 20 mins, and 'Require password after locking' to '10 secs'
		 - Right click on task manager, select 'Alternatives', then select 'Icons-only Task Manager' (You will need to go to 'Configure Icons-only Task Manager' and select
			'Show only tasks from the current desktop', as well as repin programs to task bar.
		 - Task Manager Settings > General: activate 'Show tooltips' box,  select 'Show only tasks from the current desktop'
		 - In 'Application Launcher Settings' remove the 'History' tab, select 'Show applications by name' as well as "sort alphabetically"
`		 - Under 'Launch Feedback' change 'cursor' to 'static'
		 - Configure task bar, then add widget, and drag the battery/brightness widget too the taskbar and drop it
		 - Pin konsole, settings, dolphin, and chrome to taskbar and favourites
		 - Go to 'Splash Screen' > 'Get New Theme' and install new/better splash screens, and then apply it.
		 - Under 'Screen Edges' make the botton right corner 'show desktop'
		 - Undr 'Plasma Theme', install the 'Material-Manjaro-darl' either from a file, or for the 'get new plasma themes'  button.
		 - Under "Display and Monitor" always use "OpenGL 3.1" to render as it looks the best.
		 - Under Input Device, Mouse, set the acceleration profile to flat.
	 - In the home directory, get rid of videos/music folders
	 - Change the wallpaper/lock screen wallpaper to something that looks nice
	 - Make AUR package installation easier by installing yay
	 - Install a new App Launcher by downloading one (preferably 'Tiled Menu') from the KDE Store, and installing it by downloading the file and clicking 'Get New Widgets' under the widgets menu (make sure to configure it).
	 - Installed: chrome, 7zip, spotify-adblock, discord, screenfetch, wps-office, github desktop, pinta, flameshot, evolution (mail), __________
	 - Uninstall all bloat: "sudo pacman -Rsn manjaro-documentation " (add these)
	 - Programming IDEs: vscode, codeblocks, pycharm, _________
	 - Config flameshot: Go to System Settings, Shortcuts, Global Shortcuts, +, then add flameshot, and set the shortcut to Num+right (make sure numlock is disabled/mapped to nothing).
	 - Configure KDEConnet (install the KDEConnect app on android) pair the devices over wifi, allow permissions in android
     - Install Printer functionality (see below)
         - Add printers by going to the web interface: "http://localhost:631/"
	 - Install functionality for sleeping:
		 - Enable 'systemctl suspend' command if not already done so.
		 - For laptop:
		 	 - Install acpid
			 - Edit "/etc/systemd/logind.conf"
			 - Uncomment the lines:
				 - HandleSuspendKey=suspend
				 - HandleLidSwitch=suspend
				 - HandleLidSwitchExternalPower=suspend
				 - HandleLidSwitchDocked=suspend (you will need to change this one from 'ignore' to 'suspend')
			 - Change lines to:
				 - 'HandlePowerKey=poweroff' to 'HandlePowerKey=suspend'
			 - Restart systemd daemon
				 - 'systemctl daemon-reexec' OR ' 'systemctl daemon-reload' (I don't really know which to use - the goal is to restart systemd)
     - Bind Macro Keys (see below)

Printer and Scanner Stuff:
     - Installing Brother HL-2132 Driver:
     - Download the ppd file from online (ppd's are os independent - so don't bother search for an arch/manjaro specific one)
     - Use the downloaded ppd file when installing driver through cups.
     - Previously, the ppd file for HL-2135 has worked - downloaded from openprinting.org
     - If you have the issue 'waiting for printer to become active'
            - "cat > /etc/udev/rules.d/10-usbprinterrules"
            - "sudo nano /etc/udev/rules.d/10-usbprinterrules"
            - put " ATTR{idvendor}=="ID_VENDOR_HERE", ATTR{idProduct}=="ID_PRODUCT_HERE", MODE:="0660", GROUP:="lp", ENV{libsane_matched}:="yes" " into the file (make sure to adjust idvendor and idProduct to that of the printer - find values using "lsusb")
            - For the Brother HL-2130: " ATTR{idvendor}=="04f9", ATTR{idProduct}=="003f", MODE:="0660", GROUP:="lp", ENV{libsane_matched}:="yes" "
    - For scanning, install simple-scan
             
Useful commands:
	 - Edit disk partitions: "cfdisk /dev/sdX"
	 - View Partitions with information: "lsblk" OR "df"
	 - Connect to wifi: "ip link" to list network interfaces, then "wifi-menu -o interfacename" to connect
	 - Make directory: "mkdir [directory]"
	 - Edit File: "nano [directory]" (ctrl+o, ctrl+x to save and exit) OR "vi [directory]" (:wq to save and exit)
	 - Remove file: "rm [directory+filename]"stemd 242.29-1
	 - Remove directory: "rm -r [directory]"
	 - List files in directory: "ls -a [directory]"
	 - Copy/Paste File: "cp [directory+file] [directory]"
	 - Install a package from a aur/custom repository:
		 - Method 1:
			 - "yaourt [package]" (note yaourt needs to be installed manually) (DISCONTINUED, See method 2)
		 - Method 2:
			 - git clone https://aur.archlinux.org/yay.git
			 - cd yay
			 - makepkg -si
		 - Method 3:
			 - "git clone [url of git repository]" (use "sudo pacman -S git" if git is installed)
			 - "cd [package directory + name]"
			 - "makepkg -s"
			 - "sudo pacman -U *xz" ('*xz' is the name of the .xz file in the cloned folder)
	 - List Packages: "sudo pacman -Qe"
	 - Delete program: "sudo pacman -Rsn [program]"
	 - View all avaliable UUID's: "blkid"


Bind Keys to macros
    - Left/Right desktop should already be done in settings above
    - Install xbindkeys and playerctl
    - Find what a key code is by using "xbindkeys --key"
    - Generate xbindkeys config file: "xbindkeys -d > ~/.xbindkeysrc"
    - Edit the config file.
    - Add key binds using the following syntax:
        - ""[command]" /n [key]"
    - Disable Numlock by adding:
    # Disable Numlock
    "numlockx off" #Requires numlockx to be installed. This solution is stupid - please come up with something that is better than installing an entirely new package just to turn off numlock after turning it off.
        Num_Lock
    - All key binds in xbindkeysrc file (scripts folder)
    - Use "xbindkeys --poll-rc" to apply changes.
    - To initiate key binds on start, go to 'Startup and Shutdown' in settings, then 'Autostart', click add program, type 'xbindkeys' and select 'run in terminal' under terminal options.
    - For binding ctrl_R and alt_R on laptop use the following:
         - # Desktop to the Left
           "xdotool set_desktop --relative -- 1"
               Control_R
           # Desktop to the Right
           "xdotool set_desktop --relative -- -1"
               Alt_R


Mousepad Gestures:
     - Install libinput-gestures (aur)
     - 'libinput-gestures-setup autostart'
     - 'sudo gpasswd -a $USER input'
     - log out and log back in again
     - 'libinput-gestures-setup start'
     - The configuration file is '/etc/libinput-gestures.conf'


Aliases
     - Setup Aliases
             - nano ~/.bash_aliases
             - Add aliases using "alias shortcutCommand='long command/s'"
      - My Aliases:
alias xrandr-fix-hdmi='xrandr --output LVDS-1 --auto --pos 0x0 --output HDMI-1 --auto --pos 1600x0 --primary'
alias update='sudo pacman -Syu'
alias fix-internet='sudo systemctl stop NetworkManager && sudo systemctl disable NetworkManager && sudo systemctl enable NetworkManager && sudo systemctl start NetworkManager && sudo systemctl status NetworkManager'
alias SpotifyDownload='cd && bash ~/Ahmed/Scripts/SpotifyDownload.sh'


Scripting
     - Create a bash script: 'file_name.sh'
         - Make it executable by using "chmod +x file_name.sh"
         - Run the script using "bash file_name.sh"
     - Create a cron jobs
         - Type "crontab -e"
         - Add a job using the format: "[minute] [hour] [day of month] [month] [day-of-week] /path/to/script" (use * to run for all minutes/hours/etc)
         - Save
         - Use "crontab -l" to list current crontab, "crontab -r" to remove current crontab.

         
Scripts
     - SpotifyDownload.sh (Note that spotdl does not play nice with large playlists - better off creating many smaller playlists)
         - Normal Playlists: (scripts folder) SpotifyDownload.sh
         - Smaller Playlists: (in OneDrive - also edited .bash_aliases accordingly) (scripts folder) SpotifyDownload_(Onedrive).sh


Install Manjaro on Dell Laptop
     - Wipe the disk from the bios settings
     - Reset the bios and change the following settings (under 'Maintanence'):
         - General/Boot Sequence: UEFI
         - General/Advanced Boot Options: Deselect Enable Legacy Option ROMs
         - General/UEFI Boot path Security: Never
         - System Configuration/Sata Operation: AHCI
         - Secure Boot/Secure Boot Enable: Select Secure Boot Enable
         - Secure Boot/Secure Boot Mode: Audit Mode
     - Boot to the manjaro installer and continue as normal

     
Issues and Fixes:
	 - Wifi is not connecting: restart wifi card by flipping the switch on the side of the computer (off then on)
	 - Signature error when installing packages (PGP signature): "sudo pacman-key --refresh-keys" OR "pacman -Sy archlinux-keyring && pacman -Su" OR "sudo hwclock -w"
     - KDEConnect fails to mount filesystem of android device: "sudo pacman -S sshfs"
     - Android Studio: Gradle Build Failed, view the thread: https://stackoverflow.com/questions/46999594/unable-to-resolve-dependency-for-appdebug-compileclasspath-could-not-resolve
         - Delete the line, "implementation 'com.android.support:appcompat-v7:26.1.0'" in "Gradle Scripts/build.gradle" (Module:app)
     - Dolphin Fails to Delete File with error: "Unable to create io-slave. klauncher said: Error loading '/usr/lib/qt/plugins/kf5/kio/trash.so'." Just use: "dbus-launch dolphin"
     - TexStudio package is not installed: try installing "sudo pacman -S texlive-latexextra"
     - Any sort of issue with plasma desktop: restart it by running "killall plasmashell" and then "kstart5 plasmashell"
     - Errors while installing on mac:
         - Blank screen on boot
             - It should boot up eventually, just give it time.
             - Proper Fix:
         - No internet: install drivers "linux419-broadcom-wl" (Note: it is '419' because the kernal version is '419')
             - Use "inxi -n" to see if driver is installed.
         - No Sound: 
         - 
     - NetworkManager not showing wifi (issue on dell laptop):
             - Reboot
             - Revert to older version of the firmware: "sudo pacman -U /var/cache/pacman/pkg/linux-firmware-20191022.2b016af-1-any.pkg.tar.xz"
             - Update system: "sudo pacman -Syu"
             - Boot to windows (external harddrive), then boot back to manjaro.
             - Install iwlwifi (by searching for 'iwl' with yay) or install "iwlwifi-7265-ucode" (dualband)
     - Hibernate/Suspend missing from application launcher
             - Probably still exists, just select it from the confirmation menu when you press shutdown or restart:
             - Actual Fix: __________


Other Stuff:
	 - Download a spotify track/album/playlist (also see scripts above)
         - Method 1
             - Install spotify-dl ("yay spotify-dl") (is this even necessary?)
             - Allow storage permissions: "sudo sh -c "$(curl -fsSL https://raw.githubusercontent.com/SwapnilSoni1999/spotify-dl/master/tools/termux.sh)""
             - Download: "spotifydl https://open.spotify.com/track/xyz" (Example)
         - Method 2
             - Install "python-spotdl" (AUR)
             - "spotdl -p [playlist link]"
             - "spotdl -l [file name generated by previous command]
             - Alternatively: "spotdl -s [song link]
             - Use a custom folder path using: "spotdl -f [folder path] ..."

